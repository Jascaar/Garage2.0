@using PagedList;
@using PagedList.Mvc;

@*@model IPagedList<IEnumerable<Garage2._0.Models.ParkedVehicle>>*@

<script src="~/Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />




@model IEnumerable<Garage2._0.Models.PSlot>

@{
    ViewBag.Title = "Index";
}


<h2>
    @if (ViewBag.FreeSlots < 1)
    {<text>No </text>}
    @if (ViewBag.FreeSlots > 0)
    {@ViewBag.FreeSlots;
}
    free <text>slot</text>@if (ViewBag.FreeSlots != 1)
    {<text>s</text>} (Capacity @ViewBag.Capacity)

</h2>

<form method="get">

    <div class="table-bordered">

        <b>@Html.RadioButton("searchBy", "TypeOfVehicle", true) <text>Fordonstyp</text></b>
        <b>@Html.RadioButton("searchBy", "VehicleRegistrationNumber") <text>Registreringsnummer</text></b>
        <b>@Html.RadioButton("searchBy", "VehicleBrand") <text>Märke</text></b>
        <br />
    </div>

    <div class=table-responsive>
        @Html.TextBox("search")<input type="submit" value="Search" />
    </div>

    @*@Html.EnumDropDownListFor(model => model., htmlAttributes: new { @class = "form-control" })*@
</form>

@*@Ajax.ActionLink("All", "All", new AjaxOptions()
    {

        HttpMethod = "GET",
        UpdateTargetId = "divAllVehicles",
        InsertionMode = InsertionMode.Replace

    })

    <div id="divAllVehicles">
    </div>*@

<p>
    @if (ViewBag.FreeSlots != 0)
    {<br />
        @Html.ActionLink("Park a new vehicle", "Park")}
</p>



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Member.SSN)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.SSNSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VehicleType.TypeOfVehicle)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.TypeOfVehicleSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ParkingSlot)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.ParkingSlotSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VehicleRegistrationNumber)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.VehicleRegistrationNumberSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VehicleBrand)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.VehicleBrandSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VehicleModel)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.VehicleModelSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Color)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.ColorSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TiresOnVehicle)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.TiresOnVehicleSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartParking)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.StartParkingSortParm })
        </th>
        <th></th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="8"> No rows match search criteria! Try to make a new search.</td>
        </tr>
    }


    else


    {

        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Member.SSN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleType.TypeOfVehicle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParkingSlot)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleRegistrationNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleBrand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleModel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TiresOnVehicle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartParking)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Unpark", "Unpark", new { id = item.Id })
                </td>
            </tr>
        }
    }

</table>


@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page
    //searchBy = Request.QueryString["searchBy"]
    //search = Request.QueryString["search"]
    //Display = PagedListDisplayMode.IfNeeded,
    //DisplayItemSliceAndTotal = true
}))